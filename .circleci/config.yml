version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.10.0
  aws-ecs: circleci/aws-ecs@1.2.0

commands:
  npm-auth:
    description: Authenticate with NPM registry
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

jobs:
  "Lint and Test":
    docker:
      - image: node:12.16.1-alpine3.9
    steps:
      - checkout
      - run:
          name: Install system dependencies
          command: apk update && apk upgrade && apk add --no-cache bash git
      - run:
          name: Check branch name
          command: >
            if [ "${CIRCLE_BRANCH}" != "master" ];
            then
              npm run check:branch-name
            fi
      - restore_cache:
          keys:
            - node_modules-{{ checksum "package.json" }}
      - run:
          name: Install npm modules
          command: npm ci && npm ci --prefix=website
      - run:
          name: Run Eslint & Prettier
          command: npm run lint
      - run:
          name: Run unit tests
          command: npm run test
      - run:
          name: Check squashed commit messages
          command: >
            if [ "${CIRCLE_BRANCH}" != "master" ];
            then
              npm run check:commits-squashed
            fi
      - run:
          name: Lint commit message in feature branch
          command: >
            if [ "${CIRCLE_BRANCH}" != "master" ];
            then
              npm run commitlint:feature-to-master-branch
            fi
  "Release Library":
    working_directory: ~/ttsa-npm-lib
    docker:
      - image: node:14.19.0
    steps:
      - checkout
      - npm-auth
      - run:
          name: Install npm modules
          command: npm ci && npm ci --prefix=website
      - run:
          name: Release
          command: npm run release
      - run:
          name: Save library release git hash
          command: echo $(git rev-parse HEAD) > ~/ttsa-npm-lib/release-sha.txt
      - persist_to_workspace:
          root: ~/ttsa-npm-lib
          paths:
            - ./release-sha.txt
  "Build and Deploy Website":
    working_directory: ~/ttsa-npm-lib
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - attach_workspace:
          at: ~/ttsa-npm-lib
      - run:
          name: Checkout release SHA
          command: git reset --hard $(cat ~/ttsa-npm-lib/release-sha.txt)
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          checkout: false
          create-repo: true
          dockerfile: Dockerfile
          no-output-timeout: 20m
          path: ./website
          region: AWS_DEFAULT_REGION
          repo: ttsa-website
          tag: latest,$(git rev-parse HEAD)
      - aws-ecs/update-service:
          cluster-name: development
          container-image-name-updates: container=ttsa-website,tag=$(git rev-parse HEAD)
          family: ttsa-website
  "Build and Publish Docker Image":
    docker:
      - image: docker:20.10.11
    steps:
      - checkout
      - attach_workspace:
          at: ~/ttsa-npm-lib
      - run:
          name: Authenticate Docker Hub
          command: |
            echo ${DOCKER_HUB_ACCESS_TOKEN} | \
            docker login \
              -u ${DOCKER_HUB_USERNAME} \
              --password-stdin
      - run:
          name: Build Docker image
          command: |
            docker build \
              --no-cache \
              -t testosa/testosa:latest \
              -t testosa/testosa:$(cat ~/ttsa-npm-lib/release-sha.txt) \
              .
      - run:
          name: Publish Docker image
          command: docker image push --all-tags testosa/testosa

workflows:
  version: 2
  "Lint and Test > Release Library":
    jobs:
      - "Lint and Test"
      - "Release Library":
          context: testosa-prod
          filters:
            branches:
              only: master
          requires:
            - "Lint and Test"
      - "Build and Deploy Website":
          context: testosa-prod
          filters:
            branches:
              only: /(master|[0-9]+\.x\.x)/
          requires:
            - "Release Library"
      - "Build and Publish Docker Image":
          context: testosa-prod
          filters:
            branches:
              only: /(master|[0-9]+\.x\.x)/
          requires:
            - "Build and Deploy Website"
